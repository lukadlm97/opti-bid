// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OptiBid.Microservices.Auction.Persistence;

#nullable disable

namespace OptiBid.Microservices.Auction.Persistence.Migrations
{
    [DbContext(typeof(AuctionContext))]
    [Migration("20230122002857_inital_db_creation_2023-01-22_01-24")]
    partial class initaldbcreation202301220124
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.AuctionAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Closed")
                        .HasColumnType("boolean");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("AuctionAssets");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AuctionAsset");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.Bid", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("AuctionAssetId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BidDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("BidPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("AuctionAssetId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.ServiceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ServiceCategories");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.Product", b =>
                {
                    b.HasBaseType("OptiBid.Microservices.Auction.Domain.Entities.AuctionAsset");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("integer");

                    b.HasIndex("CategoryID");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.Service", b =>
                {
                    b.HasBaseType("OptiBid.Microservices.Auction.Domain.Entities.AuctionAsset");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("integer");

                    b.HasIndex("CategoryID");

                    b.ToTable(t =>
                        {
                            t.Property("CategoryID")
                                .HasColumnName("Service_CategoryID");
                        });

                    b.HasDiscriminator().HasValue("Service");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.Bid", b =>
                {
                    b.HasOne("OptiBid.Microservices.Auction.Domain.Entities.AuctionAsset", "Asset")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiBid.Microservices.Auction.Domain.Entities.Customer", "Customer")
                        .WithMany("Bids")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.Product", b =>
                {
                    b.HasOne("OptiBid.Microservices.Auction.Domain.Entities.ProductCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.Service", b =>
                {
                    b.HasOne("OptiBid.Microservices.Auction.Domain.Entities.ServiceCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.AuctionAsset", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("OptiBid.Microservices.Auction.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
